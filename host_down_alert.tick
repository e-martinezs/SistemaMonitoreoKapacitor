dbrp "influx"."autogen"

var hostDashboardUID = 'I2m6yUpMz'
var grafanaUrl = 'http://localhost:3000'

stream
	|from()
		.measurement('cpu')
		.groupBy('host')
	|stats(10s)
		.align()
	|derivative('emitted')
		.unit(10s)
		.nonNegative()
	|eval(lambda: int(unixNano(now())/1000000))
		.as('timestamp')
		.keep()
	|eval(lambda: "timestamp"-3600000)
		.as('timestamp_1hour_before')
		.keep()
	|alert()
		.crit(lambda: "emitted" < 1.0)
		.flapping(0.25, 0.5)
		.id('{{.TaskName}} {{index .Tags "host"}}')
		.message('{{.Level}} [{{index .Tags "host"}}] El servidor dejó de enviar datos.')
		.details('
			<ul>
			<li>Alerta: {{.ID}}</li>
			<li>Nivel: {{.Level}}</li>
			<li>Host: {{index .Tags "host"}}</li>
			<li>Fecha: {{.Time.Local.Format "Mon, Jan 2 2006 15:04:05 GMT-6"}}</li>
			<li>Duración: {{.Duration}}</li>
			</ul>
			<br>	
			{{if eq .Level "OK"}}
			<p><b>El servidor volvió a enviar datos.</b></p>
			{{else}}
			<p><b>El servidor dejó de enviar datos.</b></p>
			<p><b>Revisar si murió el servidor o el proceso de Telegraf</b><p>
			{{end}}
			<p>Host Dashboard: <a>'+grafanaUrl+'/d/'+hostDashboardUID+'?var-Host={{index .Tags "host"}}&from={{index .Fields "timestamp_1hour_before"}}&to={{index .Fields "timestamp"}}</a></p>'
		)
		.email()
		.stateChangesOnly()